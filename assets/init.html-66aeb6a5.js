import{_ as a,W as e,X as s,Y as n}from"./framework-f0f0be50.js";const i={},l=n(`<h1 id="docker-基础命令" tabindex="-1"><a class="header-anchor" href="#docker-基础命令" aria-hidden="true">#</a> Docker 基础命令</h1><h3 id="commit" tabindex="-1"><a class="header-anchor" href="#commit" aria-hidden="true">#</a> Commit</h3><p>语法格式如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> commit <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> CONTAINER REPOSITORY<span class="token punctuation">[</span>:TAG<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>(选填) [OPTIONS] 说明：</p><ul><li>**-a : ** 提交的镜像作者</li><li>**-c : ** 使用Dockerfile指令来创建镜像</li><li>**-m : ** 提交时的说明文字</li><li>**-p : ** 在commit时，将容器暂停</li></ul><p>(必填) CONTAINER 说明：</p><ul><li>构建镜像所用容器的名称或者ID</li></ul><p>(必填) REPOSITORY 说明：</p><ul><li>生成镜像的名称</li></ul><p>(选填) [:TAG] 说明：</p><ul><li>生成镜像的版本号，默认为latest</li></ul><p>举例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> commit <span class="token parameter variable">-a</span> oho <span class="token parameter variable">-m</span> <span class="token string">&quot;举例说明&quot;</span> a404c6c174a2 example:3.0.19
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,14),t=[l];function c(o,r){return e(),s("div",null,t)}const d=a(i,[["render",c],["__file","init.html.vue"]]);export{d as default};
